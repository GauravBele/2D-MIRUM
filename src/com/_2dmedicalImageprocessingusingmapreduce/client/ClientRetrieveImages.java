/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com._2dmedicalImageprocessingusingmapreduce.client;

import com._2dmedicalImageprocessingusingmapreduce.admin.AdminLoadImages;
import com._2dmedicalImageprocessingusingmapreduce.pojo.Images;
import com._2dmedicalImageprocessingusingmapreduce.service.ServiceImpl;
import java.awt.Container;
import java.awt.FileDialog;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author akshay
 */
public class ClientRetrieveImages extends javax.swing.JFrame {

    private static final Logger LOGGER = Logger.getLogger(ClientRetrieveImages.class.getName());
    Images images;
    /**
     * Creates new form ClientRetrieveImages
     */
    public ClientRetrieveImages() {
        images = new Images();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInputImage = new javax.swing.JPanel();
        lblInputImage = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtVector = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        pnlRetrievedImages = new javax.swing.JPanel();
        lblRetrievedImages = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnlImage = new javax.swing.JPanel();
        lblType = new javax.swing.JLabel();
        lblTreatment = new javax.swing.JLabel();
        txtTreatment = new javax.swing.JTextField();
        txtType = new javax.swing.JTextField();
        pnlGlobal = new javax.swing.JPanel();
        lblTypeGlobal = new javax.swing.JLabel();
        lblTreatmentGlobal = new javax.swing.JLabel();
        txtTreatmentGlobal = new javax.swing.JTextField();
        txtTypeGlobal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(750, 500));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        pnlInputImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblInputImage.setBackground(new java.awt.Color(0, 0, 0));
        lblInputImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        lblInputImage.setOpaque(true);

        txtVector.setEditable(false);
        txtVector.setBackground(new java.awt.Color(0, 0, 0));
        txtVector.setColumns(20);
        txtVector.setForeground(new java.awt.Color(245, 231, 231));
        txtVector.setLineWrap(true);
        txtVector.setRows(5);
        jScrollPane1.setViewportView(txtVector);

        jButton1.setText("L o a d            I m a g e");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("R e t r i e v e           M a t c h i n g           I m a g e s");

        javax.swing.GroupLayout pnlInputImageLayout = new javax.swing.GroupLayout(pnlInputImage);
        pnlInputImage.setLayout(pnlInputImageLayout);
        pnlInputImageLayout.setHorizontalGroup(
            pnlInputImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputImageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInputImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlInputImageLayout.setVerticalGroup(
            pnlInputImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputImageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblInputImage, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(61, 61, 61))
        );

        getContentPane().add(pnlInputImage);

        pnlRetrievedImages.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblRetrievedImages.setBackground(new java.awt.Color(0, 0, 0));
        lblRetrievedImages.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        lblRetrievedImages.setOpaque(true);

        jButton3.setText("P r e v");

        jButton4.setText("N e x  t");

        jLabel1.setText("Distance");

        pnlImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblType.setText("Type :");

        lblTreatment.setText("Treatment :");

        txtTreatment.setEditable(false);

        txtType.setEditable(false);

        javax.swing.GroupLayout pnlImageLayout = new javax.swing.GroupLayout(pnlImage);
        pnlImage.setLayout(pnlImageLayout);
        pnlImageLayout.setHorizontalGroup(
            pnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlImageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlImageLayout.createSequentialGroup()
                        .addComponent(lblType)
                        .addGap(59, 59, 59)
                        .addComponent(txtType, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE))
                    .addGroup(pnlImageLayout.createSequentialGroup()
                        .addComponent(lblTreatment)
                        .addGap(18, 18, 18)
                        .addComponent(txtTreatment)))
                .addGap(21, 21, 21))
        );
        pnlImageLayout.setVerticalGroup(
            pnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlImageLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTreatment)
                    .addComponent(txtTreatment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        pnlGlobal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTypeGlobal.setText("Type :");

        lblTreatmentGlobal.setText("Treatment :");

        txtTreatmentGlobal.setEditable(false);

        txtTypeGlobal.setEditable(false);

        jLabel2.setText("Result");

        javax.swing.GroupLayout pnlGlobalLayout = new javax.swing.GroupLayout(pnlGlobal);
        pnlGlobal.setLayout(pnlGlobalLayout);
        pnlGlobalLayout.setHorizontalGroup(
            pnlGlobalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGlobalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGlobalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGlobalLayout.createSequentialGroup()
                        .addComponent(lblTreatmentGlobal)
                        .addGap(18, 18, 18)
                        .addComponent(txtTreatmentGlobal, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                        .addGap(9, 9, 9))
                    .addGroup(pnlGlobalLayout.createSequentialGroup()
                        .addComponent(lblTypeGlobal)
                        .addGap(56, 56, 56)
                        .addComponent(txtTypeGlobal)
                        .addContainerGap())))
            .addGroup(pnlGlobalLayout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlGlobalLayout.setVerticalGroup(
            pnlGlobalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGlobalLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGlobalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTypeGlobal)
                    .addComponent(txtTypeGlobal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGlobalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTreatmentGlobal)
                    .addComponent(txtTreatmentGlobal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout pnlRetrievedImagesLayout = new javax.swing.GroupLayout(pnlRetrievedImages);
        pnlRetrievedImages.setLayout(pnlRetrievedImagesLayout);
        pnlRetrievedImagesLayout.setHorizontalGroup(
            pnlRetrievedImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRetrievedImagesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRetrievedImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRetrievedImages, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlRetrievedImagesLayout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addComponent(pnlGlobal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlRetrievedImagesLayout.setVerticalGroup(
            pnlRetrievedImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRetrievedImagesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRetrievedImages, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlRetrievedImagesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlGlobal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlRetrievedImages);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        FileDialog fd = new FileDialog(this, "Select Image File", FileDialog.LOAD);
        fd.setVisible(true);
        String filePath = fd.getDirectory() + fd.getFile();
        try {
            Image image = Toolkit.getDefaultToolkit().getImage(filePath);
            MediaTracker mediaTracker = new MediaTracker(new Container());
            mediaTracker.addImage(image, 0);
            mediaTracker.waitForID(0);
            LOGGER.info("Input Image Read from " + filePath);
            images.setPath(filePath);
            BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);
            Graphics2D g2dO = bufferedImage.createGraphics();
            g2dO.drawImage(image, 0, 0, image.getWidth(null), image.getHeight(null), null);
            bufferedImage = new ServiceImpl().resizeImage(bufferedImage, 256, 256);
            lblInputImage.setIcon(new ImageIcon(bufferedImage));
            String vector = new ServiceImpl().getVector(bufferedImage);
            LOGGER.info("Image Vector: " + vector);
            images.setVector(vector);
            txtVector.setText(vector);

            Properties properties = new ServiceImpl().getProperties("2d-mirum.properties");
            BufferedWriter bw = new BufferedWriter(new FileWriter(new File(properties.getProperty("localQueryImage").toString())));
            bw.write("" + images.getVector());
            
            bw.close();
            LOGGER.info("Record Added to File: " + images.getVector());

        } catch (InterruptedException ex) {
            Logger.getLogger(AdminLoadImages.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ex) {
            LOGGER.log(Level.SEVERE, "Image Not Loaded");
        } catch (IOException ex) {
            LOGGER.log(Level.SEVERE, "File Not Found");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientRetrieveImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientRetrieveImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientRetrieveImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientRetrieveImages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientRetrieveImages().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInputImage;
    private javax.swing.JLabel lblRetrievedImages;
    private javax.swing.JLabel lblTreatment;
    private javax.swing.JLabel lblTreatmentGlobal;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblTypeGlobal;
    private javax.swing.JPanel pnlGlobal;
    private javax.swing.JPanel pnlImage;
    private javax.swing.JPanel pnlInputImage;
    private javax.swing.JPanel pnlRetrievedImages;
    private javax.swing.JTextField txtTreatment;
    private javax.swing.JTextField txtTreatmentGlobal;
    private javax.swing.JTextField txtType;
    private javax.swing.JTextField txtTypeGlobal;
    private javax.swing.JTextArea txtVector;
    // End of variables declaration//GEN-END:variables
}
